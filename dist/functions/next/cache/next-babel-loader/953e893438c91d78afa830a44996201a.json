{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/trupsys/Personal/iammer-marketing/packages/landing/containers/Saas/Navbar/index.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport NavbarWrapper from 'reusecore/src/elements/Navbar';\nimport Drawer from 'reusecore/src/elements/Drawer';\nimport Logo from 'reusecore/src/elements/UI/Logo';\nimport Box from 'reusecore/src/elements/Box';\nimport HamburgMenu from 'common/src/components/HamburgMenu';\nimport Container from 'common/src/components/UI/Container';\nimport { DrawerContext } from 'common/src/contexts/DrawerContext';\nimport { MENU_ITEMS } from 'common/src/data/Saas';\nimport ScrollSpyMenu from 'common/src/components/ScrollSpyMenu';\nimport LogoImage from 'common/src/assets/image/saas/logo.png';\n\nvar Navbar = function Navbar(_ref) {\n  var navbarStyle = _ref.navbarStyle,\n      logoStyle = _ref.logoStyle,\n      row = _ref.row,\n      menuWrapper = _ref.menuWrapper;\n\n  var _useContext = useContext(DrawerContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch; // Toggle drawer\n\n\n  var toggleHandler = function toggleHandler() {\n    dispatch({\n      type: 'TOGGLE'\n    });\n  };\n\n  return React.createElement(NavbarWrapper, _extends({}, navbarStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Box, _extends({}, row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Logo, {\n    href: \"#\",\n    logoSrc: LogoImage,\n    title: \"Agency\",\n    logoStyle: logoStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Box, _extends({}, menuWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(ScrollSpyMenu, {\n    className: \"main_menu\",\n    menuItems: MENU_ITEMS,\n    offset: -70,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Drawer, {\n    width: \"420px\",\n    placement: \"right\",\n    drawerHandler: React.createElement(HamburgMenu, {\n      barColor: \"#eb4d4b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }),\n    open: state.isOpen,\n    toggleHandler: toggleHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(ScrollSpyMenu, {\n    className: \"mobile_menu\",\n    menuItems: MENU_ITEMS,\n    drawerClose: true,\n    offset: -100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))))));\n};\n\nNavbar.propTypes = {\n  navbarStyle: PropTypes.object,\n  logoStyle: PropTypes.object,\n  button: PropTypes.object,\n  row: PropTypes.object,\n  menuWrapper: PropTypes.object\n};\nNavbar.defaultProps = {\n  navbarStyle: {\n    className: 'hosting_navbar',\n    minHeight: '70px',\n    display: 'block'\n  },\n  row: {\n    flexBox: true,\n    alignItems: 'center',\n    justifyContent: ['space-between', 'space-between', 'space-between', 'flex-start'],\n    width: '100%'\n  },\n  logoStyle: {\n    maxWidth: '130px',\n    mr: [0, 0, 0, '166px']\n  },\n  button: {\n    type: 'button',\n    fontSize: '13px',\n    fontWeight: '600',\n    color: 'white',\n    borderRadius: '4px',\n    pl: '15px',\n    pr: '15px',\n    colors: 'primaryWithBg',\n    minHeight: 'auto',\n    height: \"\".concat(1)\n  },\n  menuWrapper: {\n    flexBox: true,\n    alignItems: 'center'\n  }\n};\nexport default Navbar;","map":{"version":3,"sources":["/Users/trupsys/Personal/iammer-marketing/packages/landing/containers/Saas/Navbar/index.js"],"names":["React","useContext","PropTypes","NavbarWrapper","Drawer","Logo","Box","HamburgMenu","Container","DrawerContext","MENU_ITEMS","ScrollSpyMenu","LogoImage","Navbar","navbarStyle","logoStyle","row","menuWrapper","state","dispatch","toggleHandler","type","isOpen","propTypes","object","button","defaultProps","className","minHeight","display","flexBox","alignItems","justifyContent","width","maxWidth","mr","fontSize","fontWeight","color","borderRadius","pl","pr","colors","height"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NavbarWrapper from 'reusecore/src/elements/Navbar';\r\nimport Drawer from 'reusecore/src/elements/Drawer';\r\nimport Logo from 'reusecore/src/elements/UI/Logo';\r\nimport Box from 'reusecore/src/elements/Box';\r\nimport HamburgMenu from 'common/src/components/HamburgMenu';\r\nimport Container from 'common/src/components/UI/Container';\r\nimport { DrawerContext } from 'common/src/contexts/DrawerContext';\r\n\r\nimport { MENU_ITEMS } from 'common/src/data/Saas';\r\nimport ScrollSpyMenu from 'common/src/components/ScrollSpyMenu';\r\n\r\nimport LogoImage from 'common/src/assets/image/saas/logo.png';\r\n\r\nconst Navbar = ({ navbarStyle, logoStyle, row, menuWrapper }) => {\r\n  const { state, dispatch } = useContext(DrawerContext);\r\n\r\n  // Toggle drawer\r\n  const toggleHandler = () => {\r\n    dispatch({\r\n      type: 'TOGGLE',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <NavbarWrapper {...navbarStyle}>\r\n      <Container>\r\n        <Box {...row}>\r\n          <Logo\r\n            href=\"#\"\r\n            logoSrc={LogoImage}\r\n            title=\"Agency\"\r\n            logoStyle={logoStyle}\r\n          />\r\n          <Box {...menuWrapper}>\r\n            <ScrollSpyMenu\r\n              className=\"main_menu\"\r\n              menuItems={MENU_ITEMS}\r\n              offset={-70}\r\n            />\r\n            <Drawer\r\n              width=\"420px\"\r\n              placement=\"right\"\r\n              drawerHandler={<HamburgMenu barColor=\"#eb4d4b\" />}\r\n              open={state.isOpen}\r\n              toggleHandler={toggleHandler}\r\n            >\r\n              <ScrollSpyMenu\r\n                className=\"mobile_menu\"\r\n                menuItems={MENU_ITEMS}\r\n                drawerClose={true}\r\n                offset={-100}\r\n              />\r\n            </Drawer>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </NavbarWrapper>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  navbarStyle: PropTypes.object,\r\n  logoStyle: PropTypes.object,\r\n  button: PropTypes.object,\r\n  row: PropTypes.object,\r\n  menuWrapper: PropTypes.object,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  navbarStyle: {\r\n    className: 'hosting_navbar',\r\n    minHeight: '70px',\r\n    display: 'block',\r\n  },\r\n  row: {\r\n    flexBox: true,\r\n    alignItems: 'center',\r\n    justifyContent: [\r\n      'space-between',\r\n      'space-between',\r\n      'space-between',\r\n      'flex-start',\r\n    ],\r\n    width: '100%',\r\n  },\r\n  logoStyle: {\r\n    maxWidth: '130px',\r\n    mr: [0, 0, 0, '166px'],\r\n  },\r\n  button: {\r\n    type: 'button',\r\n    fontSize: '13px',\r\n    fontWeight: '600',\r\n    color: 'white',\r\n    borderRadius: '4px',\r\n    pl: '15px',\r\n    pr: '15px',\r\n    colors: 'primaryWithBg',\r\n    minHeight: 'auto',\r\n    height: `${1}`,\r\n  },\r\n  menuWrapper: {\r\n    flexBox: true,\r\n    alignItems: 'center',\r\n  },\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}